Conditions

Conditions tracks attribute-modifying conditions on characters.  It allows the
user to define named conditions consisting of sets of attribute modifiers, or to
apply simple anonymous modifications to any attribute.

It is recommended that this script be used in conjunction with the CommandShell
module, which will improve output formatting and command discovery, and will
enable whitespace in condition descriptions.


Commands:

All Conditions commands are accessed via the "condition" command, which provides
the following subcommands:

    !condition help [COMMAND]
	Display a help message.  If COMMAND is specified, the help message will
	detail the usage of the specified subcommand.  Otherwise, the help
	message will summarize all available subcommands.

    !condition create NAME [options]
	Create a new condition with the given name.

    !condition copy CONDITION NAME [options]
	Copy CONDITION to a new condition with the given name.

    !condition rename OLD_NAME NEW_NAME
	Rename an existing condition from OLD_NAME to NEW_NAME.  This will not
	modify conditions already in place on characters.

    !condition edit NAME [options]
	Modify the parameters of an existing condition.  This will not affect
	conditions already in place on characters.

    !condition delete NAME
	Delete an existing condition.  This will not remove conditions already
	in place on characters.

    !condition list [NAME]
	List all the effects of the specified condition.  If no condition is
	specified, list all defined conditions.

    !condition icons
	List all the available status icons (in the order in which they appear
	in the popup menu).

    !condition addeffect CONDITION ATTRIBUTE EFFECT [options]
	Add an effect to the specified condition which modifies the specified
	attribute.  This will not modify conditions already in place on
	characters.

    !condition editeffect CONDITION ATTRIBUTE EFFECT [options]
	Edit an effect of the specified condition which modifies the specified
	attribute.  This will not modify conditions already in place on
	characters.

    !condition removeeffect CONDITION ATTRIBUTE
	Remove the effect of the specified condition which modifies the
	specified attribute.  This will not modify conditions already in place
	on characters.

    !condition apply CONDITION [options]
	Apply the specified condition to one or more characters.

    !condition remove CONDITION [options]
	Remove the specified condition from one or more characters.

    !condition applyanon ATTRIBUTE EFFECT [options]
	Apply an anonymous effect to the specified attribute on one or more
	characters.

    !condition removeanon ATTRIBUTE [EFFECT_INDEX] [options]
	Remove an anonymous effect to the specified attribute from one or more
	characters.

    !condition clear [options]
	Remove all named and anonymous conditions from one or more characters.

    !condition active [options]
	List all named and anonymous conditions on one or more characters.

    !condition attrs [options]
	List modified attributes and their base values for one or more
	characters.


Options:

The "!condition create", "!condition copy", and "!condition edit" commands take
the following options:

    -i I, --icon I	Name of the icon to display on tokens affected by the
			relevant condition.  Specify "null" when copying or
			editing a condition to remove existing icon.  Use
			"!condition icons" for a list of available icons.

    -d D, --desc D	Description of this condition.  Note that CommandShell
			is required in order to use spaces in the description.

The "!condition addeffect", "!condition editeffect", and "!condition applyanon"
commands take the following option:

    -s C, --stack C	Add the effect to the stacking class C.  Only the
			largest modifier of any given stacking class will apply.
			Specify "null" when copying or editing an effect to
			remove existing stacking class (effects without a class
			will stack with any other effects).

The "!condition apply", "!condition remove", "!condition applyanon",
"!condition removeanon", "!condition clear", "!condition active", and
"!condition attrs" commands take the following option:

    -c C, --character C	The ID, token ID, or name of the character to which the
			command applies.  May be specified more than once to
			apply to multiple characters.  If not specified, all
			characters represented by selected tokens will be used.


Effects:

Effects are divided into several types.  Each type of effect stacks with all
other effect types.  The effect types are below, in the order in which they are
applied:

Additive factors add a percentage of the base attribute value.  They are applied
first, and are specified as follows:
    + X%	Add X% of the base attribute
    - X%	Subtract X% from the base attribute

Multiplicative factors multiply the resulting attribute value.  They are applied
second, and are specified as follows:
    * X		Multiply modified attribute by X
    / X		Divide modified attribute by X
    * X%	Multiply modified attribute by X / 100
    / X%	Divide modified attribute by X / 100

Offsets add a constant value to the attribute.  They are applied third, and are
specified as follows:
    + X		Add X to the modified attribute
    - X		Subtract X from the modified attribute

Caps limit the attribute to a specific range.  They are applied fourth, with
maximum being applied before minimum:
    < X		If modified attribute greater than X, reduce it to X
    > X		If modified attribute less than X, increase it to X

Constants set the attribute to a specific value.  They are applied last, and
are specified as follows:
    = X		Set attribute to X.


Usage Notes:

Modifications made to attributes which have active effects will modify the base
value, automatically causing the attribute's effective value to be recomputed.
For example, if a character has a "Strength" attribute with a value of 20, and
a "Strength +4" effect is applied, the character journal will show a value of
24.  If the value in the character journal is manually set to 21, Conditions
will use 21 as the new base, recompute the value, and update the journal to
show the new value of 25.


Examples:

!condition create Entangled -i cobweb
    Creates a new condition named "Entangled" which will use the "cobweb" icon.

!condition edit Entangled -d "Target's movement is being impeded"
    Adds a description for the "Entangled" condition.  NOTE: Quoted arguments
    require the CommandShell module.

!condition addeffect Entangled Speed / 2
    The "Entangled" condition will halve affected characters' "Speed" attribute.

!condition addeffect Entangled Dexterity < 8
    Characters effected by the "Entangled" condition will have their "Dexterity"
    attribute capped at 8.

!condition apply Entangled
    With one or more tokens selected, will apply the "Entangled" effect to each
    character represented by a selected token.

!condition apply -c 'Bob "Spider Food" Jones' Entangled
    Applies the "Entangled" effect to a single character.  NOTE: Quoted
    arguments require the CommandShell module.

!condition applyanon -c Speedy Speed +50% -s enhancement
    Applies an anonymous 50% boost to the "Speed" attribute of all characters
    named "Speedy".  The bonus will not stack with other bonuses in the
    "enhancement" stacking class.
