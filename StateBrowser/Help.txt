StateBrowser

StateBrowser allows the user to view and modify properties of the state object.

It is recommended that this script be used in conjunction with the CommandShell
module, which will improve output formatting and command discovery, and will
allow whitespace to be preserved in property values.


Commands:

The "state" command operates in several modes:

    !state [PATH]
	Displays the value (in JSON) of the specified object within state (or
	all of state if PATH is not specified).

    !state -s PATH VALUE
	Sets the value of the specified object within state to VALUE (specified
	in JSON).

    !state -d PATH
	Deletes the specified object within state.

The "state" command accepts the following options:

    -h, --help			Displays a help message and exits.

    -s, --set			Sets the value of an already-existing object
				within state.
    -S, --forceset		Sets the value of an object within state,
				creating it and any intermediate objects if
				necessary.

    -d, --delete		Deletes an object within state.  Will prompt for
				confirmation before deleting.
    -D, --forcedelete		Deletes an object within state without prompting
				for confirmation.


Examples:

!state foo.bar
    Displays the value of state.foo.bar, assuming it exists.  If state.foo.bar
    does not exist, an error will be generated.

!state -s foo.bar "{'blah': 'bloh'}"
    Sets state.foo.bar to an object with a single property: "blah", with value
    "bloh", assuming that state.foo.bar exists.  If state.foo.bar does not
    exist, an error will be generated.

!state -s foo.bar.baz 42
    Sets state.foo.bar.baz to 42.  If state.foo.bar didn't already exist, it
    will now be {'baz': 42}.

!state -d foo.bar
    If state.foo.bar exists, prompts the user to confirm deletion.  Then (if the
    user clicks the button to confirm) deletes state.foo.bar.  If state.foo.bar
    does not exist, an error will be generated.

!state -D foo.bar
    Immediately deletes state.foo.bar if it exists.  If it does not exist, an
    error will be generated.
